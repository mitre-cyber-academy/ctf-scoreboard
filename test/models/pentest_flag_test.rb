require 'test_helper'

class PentestFlagTest < ActiveSupport::TestCase
  def setup
    @game = create(:active_pentest_game)
    @defense_team = create(:pentest_team)
    @challenge = create(
                  :pentest_challenge,
                  point_value: 100,
                  first_capture_point_bonus: 75,
                  initial_shares: 1000,
                  unsolved_increment_period: 2, # Hours
                  unsolved_increment_points: 100,
                  solved_decrement_period: 2, # Hours
                  solved_decrement_shares: 200,
                  defense_period: 2, # Hours
                  defense_points: 200,
                  flag_count: 0
                )
    @flag = create(:pentest_flag, challenge: @challenge, team: @defense_team)
  end

  test 'point value' do
    solve_team = create(:pentest_team)
    unsolve_team = create(:pentest_team)
    solved_challenge = create(:pentest_solved_challenge, team: solve_team, challenge: @challenge)
    point_value = solved_challenge.flag.point_value(unsolve_team)
    assert_equal 50, point_value
  end

  test 'challenge open?' do
    assert @flag.challenge_open?

    @challenge.update(state: 0)

    assert_not @flag.challenge_open?
  end

  test 'design phase flag does not require team' do
    flag = build(:pentest_flag, challenge: @challenge, team: nil, design_phase_flag: true)
    assert flag.save

    flag = build(:design_phase_pentest_flag)
    assert flag.save
  end
end
