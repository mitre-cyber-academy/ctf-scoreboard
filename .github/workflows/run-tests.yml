on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Test and push coverage to coveralls

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Cache ruby gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install hunspell library
        run: |
          wget https://snapshot.debian.org/archive/debian/20170114T033658Z/pool/main/h/hunspell/hunspell_1.5.4-1_amd64.deb https://snapshot.debian.org/archive/debian/20170114T033658Z/pool/main/h/hunspell/hunspell-tools_1.5.4-1_amd64.deb https://snapshot.debian.org/archive/debian/20170114T033658Z/pool/main/h/hunspell/libhunspell-1.5-0_1.5.4-1_amd64.deb https://snapshot.debian.org/archive/debian/20180506T055759Z/pool/main/r/readline/libreadline7_7.0-5_amd64.deb
          sudo apt install ./*.deb

      - name: Install ruby gems
        run: |
          bundle config path vendor/bundle
          bundle config --local build.sassc --disable-march-tune-native
          bundle install --jobs 4 --retry 3

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          RAILS_ENV: test
        run: |
          bundle exec brakeman -qAzw1
          bundle exec bundle-audit check --update --ignore CVE-2016-10735 CVE-2019-8331
          bundle exec rails db:create
          bundle exec rails test
          bundle exec rails spellcheck
          bundle exec rubocop

      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
