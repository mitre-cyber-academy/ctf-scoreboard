= form_for(resource, as: resource_name, url: registration_path(resource_name), :html => { :multipart => "true", :class => "form-horizontal"}) do |f|
  - if resource.errors.any?
    .alert.alert-error
      %a.close{"data-dismiss" => "alert", :href => "#"} Ã—
      = pluralize(resource.errors.count, "error")
      = t('users.edit.error')
      %ul.errors
        - resource.errors.full_messages.each do |msg|
          %li= msg
  %label.label-custom
    = t('users.new.required_fields_notice_1')
    %span{:style => "color: red;"} *
    = t('users.new.required_fields_notice_2')
  .control-group
    = f.label :full_name, :class => "control-label-required"
    .controls
      = f.text_field :full_name, :class => "textarea", maxlength: 255
  .control-group
    = f.label :email, :class => "control-label-required"
    .controls
      = f.email_field :email, :class => "textarea", :value => params[:email] ||= f.object.email
  .control-group
    .helpertext-wrapper{  'data-toggle' => 'tooltip', 'data-placement' => 'right', :title => t('users.edit.help.affiliation') }
      = f.label :affiliation, :class => "control-label-required"
      .controls
        = f.text_field :affiliation, :class => "textarea"
  .control-group
    = f.label :year_in_school, :class => "control-label-required"
    .controls
      = f.select :year_in_school, options_for_select(year_in_school_enum, resource.year_in_school), { :include_blank => '' }, :onChange => "hidePrizesCheckbox()"
  .control-group
    .helpertext-wrapper{ 'data-toggle' => 'tooltip', 'data-placement' => 'right', :title => t('users.edit.help.state') }
      = f.label :state, :class => "control-label-required"
      .controls
        = f.select :state, options_for_select(state_enum, resource.state), { :include_blank => '' }, :onChange => "hidePrizesCheckbox()"
  .control-group
    = f.label :password, :class => required_for_update?(on_update_page)
    .controls
      = f.password_field :password, :input_html => {:autofocus => true}, :class => "textarea"
  .control-group
    = f.label :password_confirmation, t('users.edit.label.password_confirmation_2'), :class => required_for_update?(on_update_page)
    .controls
      = f.password_field :password_confirmation, :class => "textarea"
  .control-group#compete-for-prizes
    .helpertext-wrapper{  'data-toggle' => 'tooltip', 'data-placement' => 'right', :title => t('users.edit.help.compete_for_prizes') }
      = f.label :compete_for_prizes, :class => "control-label"
      .controls
        = f.check_box :compete_for_prizes
  .control-group
    .helpertext-wrapper{  'data-toggle' => 'tooltip', 'data-placement' => 'right', :title => t('users.edit.help.interested_in_employment', organization: @game.organization) }
      = f.label :interested_in_employment, :class => "control-label"
      .controls
        = f.check_box :interested_in_employment
  .control-group
    .helpertext-wrapper{  'data-toggle' => 'tooltip', 'data-placement' => 'right', :title => t('users.edit.help.age') }
      = f.label :age, :class => "control-label"
      .controls
        = f.text_field :age, :class => "textarea"
  .control-group
    = f.label :area_of_study, t('users.edit.label.major_area_of_study'), :class => "control-label"
    .controls
      = f.text_field :area_of_study, :class => "textarea"
  -# If a user is updating their information then on_update_page should be passed to the partial as true,
  -# if this is a new user registering then on_update_page should be false.
  - if on_update_page
    = render partial: 'users/registrations/update_user_form', locals: { f: f }
  .controls
    = invisible_recaptcha_tags text: 'Submit', :class => "btn"
- if on_update_page
  = render partial: 'users/registrations/delete_user_form'
