-# For PentestGames, @challenge here can actually be a flag object since Pentest challenges belong to teams + challenges and are linked by a flag object.
-# 
- content_for :admin_menu do
  %a.dropdown-item{:href => admin_edit_url(@challenge)}= t('challenges.admin_edit_challenge', challengename: @challenge.name)

- content_for :header do
  = @challenge.name

- content_for :subheading do
  = subheading(@defense_team, @challenge)

%div{ :style => "margin-bottom:40px;" }
  %h3= t('challenges.description_name')
  - if @challenge.description.blank?
    = t('challenges.show.no_desc')
  - else
    = sanitize(Kramdown::Document.new(@challenge.description).to_html)
- if !@solved_video_url.blank?
  .embed-container
    = embed(@solved_video_url)

- if @challenge.sponsored
  %div#sponsorInfo{ :style => "margin-bottom:40px;" }
    %h3#sponsorName= t('challenges.show.sponsor')
    - unless @challenge.sponsor_logo.empty?
      = image_tag(@challenge.sponsor_logo, :id => "sponsorLogo", :class => "w-25")
    - unless @challenge.sponsor_description.empty?
      = sanitize(Kramdown::Document.new(@challenge.sponsor_description).to_html)

- if @solvable
  = form_for :challenge, url: submit_url(@defense_team, @challenge), method: "put", html: { class: "card card-body bg-light", style: "margin-bottom:40px;" } do |f|
    .form-group
      .col-xs-2
      = f.label t('challenges.submit_flag')
      = f.text_field :submitted_flag, :class => "form-control col-sm-10"
    .control-group
      = invisible_recaptcha_tags text: 'Submit', :class => "btn btn-primary"

- if @solved_by.length > 0
  %table.table.table-bordered.table-striped.table-hover
    %thead
      %tr
        %th #
        %th= t('challenges.solved_team_name_table_header')
        %th= t('challenges.solved_division_name_table_header')
        %th= t('challenges.solved_when_table_header')
    %tbody
      - @solved_by.each_with_index do |e, i|
        %tr
          %td= i + 1
          %td= link_to display_name(e.team), summary_team_path(e.team)
          %td= e.team.division.name
          %td= e.created_at.strftime("%b %e %y, %R %Z")
